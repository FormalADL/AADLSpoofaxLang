module FeatureGroupsAndTypes

imports Lexical Constant TypeIdentifier
imports Prototypes
imports FeaturesAndSharedAccess
imports Annex
imports ComponentType
exports
	sorts FeatureGroupType

  context-free start-symbols
  

  context-free syntax
  	
  	
  	
  	"properties" ContainedPropertyAssociation+                  -> FeatureGroupContainedPropertyAssociations{cons("FeatureGroupContainedPropertyAssociations")}
  	"properties" NoneStatement                                  -> FeatureGroupContainedPropertyAssociations{cons("FeatureGroupContainedPropertyAssociations")}
  	"inverse" "of" UniqueFeatureGroupTypeReference              -> INUniqueFeatureGroupTypeReference{cons("Inverse_Of")}
  	
  	"feature" "group" DefiningIdentifier
  	ComponentPrototypes? 
    ComponentFeatures? 
  	INUniqueFeatureGroupTypeReference?
  	FeatureGroupContainedPropertyAssociations?
  	%%AnnexSubclause*
  	"end" DefiningIdentifier                                -> FeatureGroupType{cons("FeatureGroupType")}
  	
  	"prototypes" Prototype+                       -> Prototypess{cons("Prototypes")}
  	"prototypes" PrototypeRefinement+             -> Prototypess{cons("Prototypes")}
  	"prototypes" NoneStatement                    -> Prototypess{cons("Prototypes")}
  	
  	"features" Feature+                         -> Featuress{cons("Features")}
  	"features" FeatureRefinement+               -> Featuress{cons("Features")}
  	
  	"feature" "group" DefiningIdentifier
  	"extends" UniqueFeatureGroupTypeReference
  	   PrototypeBindings?
  	Prototypess?
  	Featuress?
  	INUniqueFeatureGroupTypeReference?
  	FeatureGroupContainedPropertyAssociations?
  	%%AnnexSubclause*
  	"end" DefiningIdentifier                                -> FeatureGroupTypeExtension{cons("FeatureGroupTypeExtension")}
  	
  	"in"      ->Inout{cons("in")}
  	"out"     ->Inout{cons("out")}
  	"inverse" "of" UniqueFeatureGroupTypeReference    -> UniqueFeatureGroupTypeReferences{cons("UniqueFeatureGroupTypeReferences")}
  	"inverse" "of" PrototypeIdentifier                -> PrototypeIdentifiers{cons("PrototypeIdentifiers")}
  	%%PrototypeIdentifiers                            -> UniqueFeatureGroupType{cons("UniqueFeatureGroupType")}
  	UniqueFeatureGroupTypeReferences                  -> UniqueFeatureGroupType{cons("UniqueFeatureGroupType")}
  	
  	
  	DefiningFeatureGroupIdentifier ":"
  	Inout? "feature" "group"
  	UniqueFeatureGroupType?       -> FeatureGroupSpec{cons("InFeatureGroupSpecU")}
  	
  	DefiningFeatureGroupIdentifier ":" "refined" "to"
  	Inout? "feature" "group"
  	UniqueFeatureGroupType?       -> FeatureGroupRefinement{cons("InFeatureGroupRefinementU")}
  	
  	
  	(PackageName "::")? FeatureGroupTypeIdentifier       -> UniqueFeatureGroupTypeReference{cons("UniqueFeatureGroupTypeReference")}
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	