module Modes

imports Lexical Constant TypeIdentifier
imports PropertyTypes
imports PropertyDefinitions
imports PropertyConstants
imports Term

exports
	sorts ModesSubclause

  context-free start-symbols
  

  context-free syntax
  	"modes" ModeTN+            -> ModesSubclause{cons("Mode")}
  	
  	Mode -> ModeTN
  	ModeTransition -> ModeTN
  	NoneStatement -> ModeTN
  	
  	"requires" "modes"  NoneStatement    -> RequiresModesSubclause{cons("RequireNone")}
  	"requires" "modes" Mode+            -> RequiresSubclause{cons("RequireMode")}
  	
  	"initial"                          -> Initial{cons("Initial")}
  	"{" PropertyAssociation+ "}"    -> ModePropertyAssciations{cons("ModePropertyAssciations")}
  	"{" PropertyAssociation+ "}"    -> ModeTransitionPropertyAssciations{cons("ModeTransitionPropertyAssciations")}
  	
  	DefiningModeIdentifier ":" Initial? "mode"
  	  ModePropertyAssciations? ";"     -> Mode{cons("Mode")}
  	 
  	(DefiningModeTransitionIdentifier ":")?
  	SourceModeIdentifier "-[" {ModeTransitionTrigger ","}+ "]->" DestinationModeIdentifier
  	ModeTransitionPropertyAssciations? ";"     -> ModeTransition{cons("ModeTransition")}
  	 
  	UniquePortIdentifier                 -> ModeTransitionTrigger
  	"self" "." EventSourceIdentifier     -> ModeTransitionTrigger{cons("SelfTtigger")}
  	"processor" "." PortIdentifier       -> ModeTransitionTrigger{cons("ProcessorTtigger")}
  	
  	(SubComponentFeatureGroupOrSubProgramCallIdentifier ".")? PortIdentifier  -> UniquePortIdentifier{cons("UniquePortIdentifier")}
  	
  	"in" "modes" "(" {ModeIdentifier ","}+ ")"  -> InModes{cons("InMode")}
  	
  	"in" "modes" "(" {ModeName ","}+ ")"        -> ComponentInModes{cons("Component")}
  	
  	LocalModeIdentifier ("=>" SubcomponentModeIdentifier)?   -> ModeName{cons("ModeName")}
  	
  	"in" "modes" "(" {ModeOrTransition ","}+ ")"  -> InModesAndTransitions{cons("InModesAndTransitions")}
  	 
  	ModeIdentifier              -> ModeOrTransition
  	 
  	 