module PropertyTypes

imports Lexical Constant TypeIdentifier
imports PropertyConstants
imports Term
exports
	sorts PropertyTypeDeclaration

  context-free start-symbols
  

  context-free syntax
  	 DefiningPropertyTypeIdentifier ":" "type" PropertyType ";" -> PropertyTypeDeclaration{cons("Property_Type_Declaration")}
  	 
  	 "aadlboolean"                -> PropertyType{cons("aadlboolean")}
  	 "aadlstring"                 -> PropertyType{cons("aadlstring")}
  	 EnumerationType              -> PropertyType{cons("EnumerationType")}
  	 UnitsType                    -> PropertyType{cons("UnitsType")}
  	 NumberType                   -> PropertyType{cons("NumberType")}
  	 RangeType                    -> PropertyType{cons("RangeType")}
  	 ClassifierType               -> PropertyType{cons("ClassifierType")}
  	 ReferenceType                -> PropertyType{cons("ReferenceType")}
  	 RecordType                   -> PropertyType{cons("RecordType")}
  	 
  	 "enumeration" "(" {DefiningEnumerationLiteralIdentifier ","}+ ")"  -> EnumerationType{cons("Enumeration_Type")}
  	 
  	 "units" UnitsList       -> UnitsType{cons("Units_Type")}
  	 "(" DefiningUnitIdentifier ("," DefiningUnitIdentifier "=>" UnitIdentifier "*" NumericLiteral)* ")"   -> UnitsList{cons("Units_List")}
  	 
  	 %%"units" UnitsDesignator               -> UnitsDesignators{cons("UnitsDesignator")}
  	 
  	 "aadlreal" RealRange? ("units" UnitsDesignator)?        -> NumberType{cons("Number_Type")}
  	 "aadlinteger" IntegerRange? ("units" UnitsDesignator)?   -> NumberType{cons("Number_Type")}
  	 
  	 UnitsUniquePropertyTypeIdentifier         -> UnitsDesignator
  	 UnitsList                                 -> UnitsDesignator
  	 
  	 RealLowerBoud ".." RealUpperBound         -> RealRange{cons("Real_Range")}
  	 SignedAadlrealOrConstant                  -> RealLowerBoud
  	 SignedAadlrealOrConstant                  -> RealUpperBound 
  	 
  	 IntegerLowerBound ".." IntegerUpperBound         -> IntegerRange{cons("Integer_Range")}
  	 SignedAadlintegerOrConstant                      -> IntegerUpperBound 
  	 SignedAadlintegerOrConstant                      -> IntegerLowerBound
  	 
  	 SignedAadlreal                      -> SignedAadlrealOrConstant
  	 %%Sign? RealPropertyConstantTerm      -> SignedAadlrealOrConstant{cons("SignedAadlrealOrConstant")}
  	 SignedAadlinteger                   -> SignedAadlintegerOrConstant
  	 %%Sign? IntegerPropertyConstantTerm   -> SignedAadlintegerOrConstant{cons("SignedAadlintegerOrConstant")}
  	 
  	 "+"        -> Sign{cons("positive")}	 
  	 "-"        -> Sign{cons("negative")}
  	 
  	 Sign? IntegerLiteral Identifier?   -> SignedAadlinteger{cons("Signed_Aadlinteger")}
  	 Sign? RealLiteral Identifier?      -> SignedAadlreal{cons("Signed_Aadlreal")}
  	 
  	 "range" "of" NumberType                            -> RangeType{cons("RangeType")}
  	 "range" "of" NumberUniquePropertyTypeIdentifier    -> RangeType{cons("RangeType")}
  	 
  	 "(" {ClassifierCategoryReference ","}+ ")"         -> ClassifierCategoryReferences{cons("ClassifierCategoryReferences")}
  	 "("{ReferenceCategory ","}+")"                     -> ReferenceCategorys{cons("ReferenceCategorys")}
  	 "list" "of"                                        -> ListOf{cons("ListOf")}
  	 
  	 "classifier" ClassifierCategoryReferences? -> ClassifierType{cons("Classifier_Type")}
  	 Identifier                                 ->  ClassifierCategoryReference
  	 
  	 ("{"AnnexIdentifier"}""**")? MetaModelClassIdentifier     ->QualifiedMetaModelIdentifier{cons("QualifiedMetaModelIdentifier")} 
  	 Identifier+          -> MetaModelClassIdentifier{cons("MetaModelClassIdentifier")}
  	 
  	 "reference" ReferenceCategorys?   -> ReferenceType{cons("ReferenceType")}
  	 Identifier                        -> ReferenceCategory
  	 
  	 (PropertySetIdentifier "::")? PropertySetIdentifier -> UniquePropertyTypeIdentifier{cons("UniquePropertyTypeIdentifier")}
  	 
  	 "record" "(" RecordField+ ")"  -> RecordType{cons("RecordType")}
  	 DefiningFieldIdentifier ":" ListOf? PropertyTypeDesignator -> RecordField{cons("RecordField")}
  	 
  	 Identifier                          -> PropertyTypeDesignator
  	 PropertyType                        -> PropertyTypeDesignator
  	 (Identifier "::")? Identifier       -> UnitsUniquePropertyTypeIdentifier{cons("UnitsUniquePropertyTypeIdentifier")}
  	 (Identifier "::")? Identifier       -> NumberUniquePropertyTypeIdentifier{cons("NumberUniquePropertyTypeIdentifier")}
  	 